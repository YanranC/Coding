/*
 * @lc app=leetcode.cn id=86 lang=java
 *
 * [86] 分隔链表
 */

// @lc code=start
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        ListNode small=new ListNode(-1), big=new ListNode(-1);
        ListNode p=head,big_b=big,ans=small;

        while(p!=null){
            if(p.val<x){
                small.next=p;
                p=p.next;
                small=small.next;
            }else{
                big.next=p;
                p=p.next;
                big=big.next;
            }
        }

        big.next=null;
        small.next=big_b.next;
        return ans.next;
    }
}
// @lc code=end

